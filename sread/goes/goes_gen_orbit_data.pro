;+
; Generate GOES data for certain probe for 1 day.
;-
;

pro goes_gen_orbit_data, date, probe=probe, file=file, errmsg=errmsg

;——-Constant.
    secofday = 86400d
    re = 6378d & re1 = 1d/re
    

;——-Settings.
    if n_elements(date) eq 0 then begin
        errmsg = handle_error('No input time ...')
        return
    endif
    
    if n_elements(probe) ne 1 then begin
        errmsg = handle_error('Wrong probe input ...')
        return
    endif
    
    pre0 = 'g'+probe
    
    if n_elements(file) eq 0 then begin
        loc_root = join_path([data_root_dir(),'sdata','goes'])
        version = 'v01'
        base_pattern = pre0+'_orbit_%Y_%m%d_'+version+'.cdf'
        local_pattern = join_path([loc_root, pre0, 'orbit', '%Y'])
        base_name = apply_time_to_pattern(base_pattern, date)
        local_path = apply_time_to_pattern(local_pattern, date)
        file = join_path([local_path,base_name])
    endif
    if file_test(file) eq 1 then file_delete, file
    
    
;---Get data and save to file.
    utr = date+[0,secofday]
    pos = goes_load_pos(trange=time_string(utr), probe=probe, coord_sys='gsm')
    
    ginfo = {$
        title: 'GOES position in GSM from SSC online request',$
        text: 'Generated by Sheng Tian at the University of Minnesota'}
    scdfwrite, file, gattribute=ginfo
    
    ut0s = pos.time
    rgsms = pos.pos_values*re1
    ut1s = smkarthm(utr[0],utr[1],60,'dx')
    rgsms = sinterpol(rgsms, ut0s, ut1s)
    
    ; utsec.
    utname = 'ut_pos'
    ainfo = {$
        fieldnam: 'UT time', $
        units: 'sec', $
        var_type: 'support_data'}
    scdfwrite, file, utname, value=ut1s, attribute=ainfo, cdftype='CDF_DOUBLE'
    
    ; rgsm.
    posname = 'pos_gsm'
    tdat = rgsms
    ainfo = {$
        fieldnam: 'R GSM', $
        units: 'Re', $
        var_type: 'data', $
        depend_0: utname}
    scdfwrite, file, posname, value=transpose(tdat), attribute=ainfo, dimensions=[3], dimvary=[1]

end

utr0 = time_double(['2012-01-01','2018-01-01'])
secofday = 86400d
days = smkarthm(utr0[0],utr0[1],secofday,'dx')
probes = ['13','14','15']
foreach probe, probes do $
    foreach date, days do $
        goes_gen_orbit_data, date, probe=probe, errmsg=errmsg

end