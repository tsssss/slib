;+
; Read Polar MLT image.
;-

pro polar_read_mlt_image_gen_file, time, $
    filename=file, errmsg=errmsg, _extra=extra

    errmsg = ''

    if n_elements(file) eq 0 then begin
        errmsg = 'No output file ...'
        return
    endif

    if n_elements(time) eq 0 then begin
        errmsg = 'No input time ...'
        return
    endif
    secofday = constant('secofday')
    date = time[0]-(time[0] mod secofday)
    time_range = date+[0,secofday]

;test
;time_range = time_double(['2001-10-22/11:00','2001-10-22/11:05'])

    emission_height = 120d
    polar_calc_mlt_image, time_range, emission_height=emission_height
    var = 'po_mlt_image'
    get_data, var, ut0s, mlt_images, limits=lims


;---Save data to file.
    compress = 1
    ginfo = dictionary($
        'TITLE', 'Polar UVI images in MLT-MLat, converted to raw UVI images', $
        'TEXT', 'Generated by Sheng Tian at the University of Minnesota' )
    cdf_save_setting, ginfo, filename=file

    utname = 'ut_sec'
    cdf_save_var, utname, value=ut0s, filename=file
    settings = dictionary($
        'FIELDNAM', 'unix time', $
        'UNITS', 'sec', $
        'VAR_TYPE', 'support_data' )
    cdf_save_setting, settings, var=utname, filename=file

    mlt_var = 'pixel_mlt'
    val = lims.pixel_mlt
    cdf_save_var, mlt_var, value=val, filename=file, save_as_one=1
    settings = dictionary($
        'FIELDNAM', 'pixel mlt', $
        'UNITS', 'h', $
        'VAR_TYPE', 'support_data')
    cdf_save_setting, settings, var=mlt_var, filename=file

    mlat_var = 'pixel_mlat'
    val = lims.pixel_mlat
    cdf_save_var, mlat_var, value=val, filename=file, save_as_one=1
    settings = dictionary($
        'FIELDNAM', 'pixel mlat', $
        'UNITS', 'deg', $
        'VAR_TYPE', 'support_data')
    cdf_save_setting, settings, var=mlt_var, filename=file

    vname = 'mlt_image'
    cdf_save_var, vname, value=mlt_images, filename=file
    settings = dictionary($
        'FIELDNAM', 'MLT image', $
        'image_size', image_size, $
        'mlt_range', mlt_range, $
        'mlat_range', mlat_range, $
        'UNITS', '#', $
        'VAR_TYPE', 'data', $
        'DEPEND_0', utname, $
        'DEPEND_1', mlt_var, $
        'DEPEND_2', mlat_var )
    cdf_save_setting, settings, var=vname, filename=file

end



time_range = time_double(['2001-10-22/11:00','2001-10-22/11:05'])
file = join_path([homedir(),'test','test_polar_mltimg.cdf'])
file_delete, file, allow_nonexist=1
polar_read_mlt_image_gen_file, time_range, filename=file
end
