

pro rbsp_read_q_uvw2gse_gen_file, time, probe=probe, filename=file


;---Check inputs.
    if n_elements(file) eq 0 then begin
        errmsg = handle_error('No output file ...')
        return
    endif

    if n_elements(probe) eq 0 then begin
        errmsg = handle_error('No input probe ...')
        return
    endif

    if n_elements(time) eq 0 then begin
        errmsg = handle_error('No input time ...')
        return
    endif


;---Constants and settings.
    secofday = 86400d
    errmsg = ''
    xyz = constant('xyz')


    ; Derived settings.
    date = time[0]-(time[0] mod secofday)
    time_range = date+[0,secofday]
    long_time_range = time_range+[-1,1]*3600d
    prefix = 'rbsp'+probe+'_'

    rbsp_read_quaternion, long_time_range, probe=probe
    rbsp_fix_q_uvw2gse, long_time_range, probe=probe


;---Init file.
    out_dir = fgetpath(file)
    if file_test(out_dir,/directory) eq 0 then file_mkdir, out_dir
    data_file = file
    if file_test(data_file) eq 1 then file_delete, data_file  ; overwrite old files.
    cdf_id = cdf_create(data_file)
    ginfo = dictionary($
        'TITLE', 'RBSP quaternion with artificial wobbles removed', $
        'TEXT', 'Generated by Sheng Tian at the University of Minnesota' )
    cdf_save_setting, ginfo, filename=cdf_id


    vname = prefix+'q_uvw2gse'
    q_uvw2gse = get_var_data(vname, in=time_range, times=times)

    ; Save time.
    utname = 'epoch'
    data = convert_time(times, from='unix', to='epoch')
    settings = dictionary($
        'FIELDNAM', 'epoch', $
        'UNITS', 'msec', $
        'VAR_TYPE', 'support_data' )
    cdf_save_var, utname, value=data, filename=cdf_id, cdf_type='CDF_DOUBLE'
    cdf_save_setting, settings, var=utname, filename=cdf_id

    ; Save q.
    data = q_uvw2gse
    settings = dictionary($
        'FIELDNAM', 'q uvw2gse', $
        'UNITS', '#', $
        'VAR_TYPE', 'data', $
        'DEPEND_0', utname )
    cdf_save_var, vname, value=data, filename=cdf_id
    cdf_save_setting, settings, var=vname, filename=cdf_id

    cdf_close, cdf_id

end

time = time_double('2013-01-01')
file = join_path([homedir(),'tmp.cdf'])
rbsp_read_q_uvw2gse_gen_file, time, probe='a', filename=file
end
