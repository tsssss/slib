;+
; Create a file per site for data availability on hourly basis.
;-

function themis_asf_load_flag_avail_gen_file, input_time_range, site=site, filename=file, errmsg=errmsg

;---Init settings.
    errmsg = ''
    retval = !null
    time_step = 3600d
    time_range = time_double(input_time_range)

    file_year = float(time_string(time_range[0],tformat='YYYY'))
    file_time_range = time_double(string(file_year+[0,1]))
    file_times = themis_asi_read_available_file_times(file_time_range, site=site, id='l1%asf')
    if n_elements(file_times) gt 0 then begin
        index = where_pro(file_times, '[]', file_time_range, count=count)
        if count eq 0 then file_times = !null else file_times = file_times[index]
    endif

    common_times = make_bins(file_time_range, time_step) ; intend to overlap with the 1st time tag in the next file.
    ntime = n_elements(common_times)
    flags = fltarr(ntime)
    foreach file_time, file_times do begin
        index = where(common_times eq file_time, count)
        if count eq 0 then message, 'Inconsistency ...'
        flags[index] = 1
    endforeach


;---Save data.
    if file_test(file) eq 1 then file_delete, file
    cdf_touch, file

    gatts = dictionary($
        'text', 'The flag for the hourly THEMIS ASI full-resolution images (ASF). Generated by Sheng Tian, ts0110@atmos.ucla.edu' )
    cdf_save_setting, gatts, filename=file


    time_var = 'time'
    vatts = dictionary($
        'var_type', 'metadata', $
        'unit', 'sec', $
        'var_notes', 'unix time' )
    cdf_save_var, time_var, filename=file, value=common_times
    cdf_save_setting, vatts, varname=time_var, filename=file


    asf_var = themis_read_asf(time_range, site=site, get_name=1)
    flag_var = asf_var+'_flag_avail'
    var = flag_var
    vatts = dictionary($
        'var_type', 'data', $
        'unit', '#', $
        'var_notes', '1 for have data, 0 for no data', $
        'depend_0', time_var )
    cdf_save_var, var, filename=file, value=flags
    cdf_save_setting, vatts, varname=var, filename=file

    return, file

end


time_range = ['2008']
site = 'inuv'
file = join_path([homedir(),'thg_asf_'+site+'_flag_avail_'+time_string(time_range[0],tformat='YYYY')+'_v01.cdf'])
file = themis_asf_load_flag_avail_gen_file(time_range, site=site, filename=file)
end