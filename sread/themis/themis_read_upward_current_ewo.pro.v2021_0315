;+
; Read upward current EWOgram.
;
; time_range. Time range in unix time.
; mlt_range. MLT range in hr.
; mlat_range. MLat range for calc EWOgram, in deg.
; mlon_range. MLon range for calc EWOgram, in deg.
;-
pro themis_read_upward_current_ewo, time_range, mlat_range=mlat_range, $
    mlt_range=mlt_range, mlon_range=mlon_range

    if n_elements(mlon_range) eq 0 then mlon_range = [-100.,50]
    if n_elements(mlat_range) eq 0 then mlat_range = [60.,70]
    if n_elements(mlt_range) eq 0 then mlt_range = [-1,1]*6


;---Settings.
    mlon_ewo_var = 'thg_j_up_mlon_ewo'
    mlt_ewo_var = 'thg_j_up_ewo'


;---Load MLon image.
    mlonimg_var = 'thg_j_ver_mlonimg'
    themis_read_current_mlonimg, time_range, varname=mlonimg_var
    get_data, mlonimg_var, times, j_new
    ntime = n_elements(times)
    mlon_bins = get_setting(mlonimg_var, 'mlon_bins')
    mlat_bins = get_setting(mlonimg_var, 'mlat_bins')
    nmlon_bin = n_elements(mlon_bins)
    nmlat_bin = n_elements(mlat_bins)
    mlon_binsize = total(mlon_bins[0:1]*[-1,1])
    mlt_binsize = mlon_binsize/15.

    
    ; Get EWOgram in terms of mlon.
    ; J is positive for upward current.
    ; For downward current, we want negative value, then flip ewo to positive to let color works better.
    mlat_index = lazy_where(mlat_bins, '[]', mlat_range)
    ;ewo = total(-j_new[*,*,mlat_index], 3)/n_elements(mlat_index)
    ewo = fltarr(ntime,nmlon_bin)
    foreach time, times, ii do begin
        foreach mlon, mlon_bins, jj do begin
            tmp = reform(j_new[ii,jj,mlat_index])
            index = where(tmp lt 0, count)
            if count ne 0 then tmp[index] = 0
            ewo[ii,jj] = mean(tmp)   ; total -> zrange [0.2.5e5], max -> zrange [0,2.5e5], mean -> zrange [0,1.5e5], total -> zrange [3e5]
        endforeach
    endforeach
    store_data, mlon_ewo_var, times, ewo, mlon_bins, limits={$
        spec: 1, $
        no_interp: 1, $
        ytitle: 'MLon (deg)', $
        ystyle: 1, $
        yrange: reverse(minmax(mlon_bins)), $
        ztitle: 'Upward current (A)', $
        zlog: 0 , $
        zrange: [0,.5e5], $
        yticklen: -0.02, $
        xticklen: -0.02 }


;---Convert images from mlon/mlat to mlt/mlat.
    mlt_bins = make_bins(mlt_range, mlt_binsize)
    nmlt_bin = n_elements(mlt_bins)
    get_data, mlon_ewo_var, times, ewo, mlon_bins
    ntime = n_elements(times)
    mlt_ewo = fltarr(ntime,nmlt_bin)
    for ii=0,ntime-1 do begin
        the_mlts = mlon2mlt(mlon_bins,times[ii])
        dmlt = the_mlts[1:-1]-the_mlts[0:-2]
        index = where(abs(dmlt) gt 12, count)
        if count ne 0 then begin
            if dmlt[index] ge 0 then begin
                the_mlts[index+1:*] -= 24
            endif else begin
                the_mlts[index+1:*] += 24
            endelse
        endif

        mlt_ewo[ii,*] = interpol(ewo[ii,*],the_mlts,mlt_bins)
        index = where(mlt_bins le min(the_mlts) or mlt_bins ge max(the_mlts), count)
        if count ne 0 then mlt_ewo[ii,index] = 0
    endfor
    ystep = 3
    ytickv = make_bins(mlt_range, ystep)
    yticks = n_elements(ytickv)-1
    yminor = ystep
    store_data, mlt_ewo_var, times, mlt_ewo, mlt_bins, limits={$
        spec: 1, $
        no_interp: 1, $
        ytitle: 'MLT (hr)', $
        ystyle: 1, $
        yrange: mlt_range, $
        ytickv: ytickv, $
        yticks: yticks, $
        yminor: yminor, $
        ztitle: 'Upward current (A)', $
        zlog: 0 , $
        zrange: [0,.5e5], $
        yticklen: -0.02, $
        xticklen: -0.02 }


end

mlt_range = [-1,1]*6
time_range = time_double(['2013-06-07/04:00','2013-06-07/07:00'])
themis_read_upward_current_ewo, time_range, mlt_range=mlt_range

end
